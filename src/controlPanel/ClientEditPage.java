/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package controlPanel;

import alertDialog.ErrorMessageDialog;
import alertDialog.SuccessMessageDialog;
import asconapplication.ASCONApplication;
import asconapplication.Constants;
import asconapplication.SchemaHelper;
import java.util.Calendar;
import javax.swing.DefaultComboBoxModel;
import objectScripts.Client;
import objectScripts.SettingsVariable;

/**
 *
 * @author Oluwafemi Nehemiah
 * Rotneil IT Consult
 * rotneil@yahoo.com
 */
public final class ClientEditPage extends javax.swing.JPanel 
implements Constants{

    private final ASCONApplication asconApp;
    private final SchemaHelper mSchema;
    private int callingPage;
    private Client mClient;
    
    private SettingsVariable [] accomodation;
    private SettingsVariable [] location;
    private SettingsVariable [] block;
    private SettingsVariable [] occupant;
    private SettingsVariable chosenAccomodation;
    private SettingsVariable chosenLocation;
    private SettingsVariable chosenBlock;
    private SettingsVariable chosenOccupant;
    private int status = STATUS.NOT_AVAILABLE;
    
    // variables used for the date 
    private String [] dayOfMonth;
    private String [] monthOfYear;
    private String [] year;
    private int chosenADayIndex, chosenAMonth, chosenAYear;
    private int chosenDDayIndex, chosenDMonth, chosenDYear;
    
    // flag to check if user has started entry
    private boolean FIELDS_CLEARED = false;
    
    /**
     * Creates new form RegisterPanel
     * @param asconApp
     * @param client
     * @param page
     */
    public ClientEditPage(ASCONApplication asconApp, Client client, int page) {
        this.asconApp = asconApp;
        this.mSchema = asconApp.getSchema();
        this.mClient = client;
        this.callingPage = page;
        
        // date variables
        dayOfMonth = asconApp.getDaysOfMonth();
        monthOfYear = asconApp.getMonthOfYear();
        year = asconApp.getYear();
        
        // set the arrays to used by the combos
        accomodation = mSchema.getSettings(SETTING.ACCOMODATION);
        location = mSchema.getSettings(SETTING.LOCATION);
        block = mSchema.getSettings(SETTING.BLOCK_NAME);
        occupant = mSchema.getSettings(SETTING.OCCUPANT);
        initComponents();
        
        // set the default chosen items
        setDefaultValues ();
        
        // add buttons to status group button
        statusGroup.add(availableButton);
        statusGroup.add(notAvailableButton);
        
        // call method to initialize the value fields
        try {
            setClientAttributes (); 
        } catch (Exception e) {}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        statusGroup = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        companyField = new javax.swing.JTextField();
        addressField = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        blockCombo = new javax.swing.JComboBox();
        locationCombo = new javax.swing.JComboBox();
        occupantCombo = new javax.swing.JComboBox();
        arrivalMCombo = new javax.swing.JComboBox();
        departureMCombo = new javax.swing.JComboBox();
        accomodationCombo = new javax.swing.JComboBox();
        remarkField = new javax.swing.JTextField();
        arrivalDCombo = new javax.swing.JComboBox();
        arrivalYCombo = new javax.swing.JComboBox();
        departureDCombo = new javax.swing.JComboBox();
        availableButton = new javax.swing.JRadioButton();
        notAvailableButton = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        roomNumberField = new javax.swing.JTextField();
        departureYCombo = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        cancelButton = new javax.swing.JButton();
        modifyButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        courseField = new javax.swing.JTextField();
        departmentField = new javax.swing.JTextField();
        costField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        refField = new javax.swing.JTextField();

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Personal Details"));

        jLabel6.setText("Name of Client: ");

        jLabel7.setText("Name of Company: ");

        jLabel8.setText("Address:");

        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameField)
                    .addComponent(companyField)
                    .addComponent(addressField)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(companyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Resident Details"));

        jLabel10.setText("Block Name: ");

        jLabel11.setText("Location:");

        jLabel12.setText("Room No: ");

        jLabel13.setText("Occupants: ");

        jLabel1.setText("Arrival Date: ");

        jLabel3.setText("Departure: ");

        jLabel5.setText("Remark: ");

        blockCombo.setModel(new DefaultComboBoxModel(block));
        blockCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockComboActionPerformed(evt);
            }
        });

        locationCombo.setModel(new DefaultComboBoxModel(location));
        locationCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationComboActionPerformed(evt);
            }
        });

        occupantCombo.setModel(new DefaultComboBoxModel(occupant));
        occupantCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                occupantComboActionPerformed(evt);
            }
        });

        arrivalMCombo.setModel(new DefaultComboBoxModel(monthOfYear));
        arrivalMCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrivalMComboActionPerformed(evt);
            }
        });

        departureMCombo.setModel(new DefaultComboBoxModel(monthOfYear));
        departureMCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departureMComboActionPerformed(evt);
            }
        });

        accomodationCombo.setModel(new DefaultComboBoxModel(accomodation));
        accomodationCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accomodationComboActionPerformed(evt);
            }
        });

        arrivalDCombo.setModel(new DefaultComboBoxModel(dayOfMonth));
        arrivalDCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrivalDComboActionPerformed(evt);
            }
        });

        arrivalYCombo.setModel(new DefaultComboBoxModel(year));
        arrivalYCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrivalYComboActionPerformed(evt);
            }
        });

        departureDCombo.setModel(new DefaultComboBoxModel(dayOfMonth));
        departureDCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departureDComboActionPerformed(evt);
            }
        });

        availableButton.setText("Available");
        availableButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                availableButtonItemStateChanged(evt);
            }
        });

        notAvailableButton.setText("Not Available");
        notAvailableButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                notAvailableButtonItemStateChanged(evt);
            }
        });

        jLabel4.setText("Status:");

        departureYCombo.setModel(new DefaultComboBoxModel(year));
        departureYCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departureYComboActionPerformed(evt);
            }
        });

        jLabel2.setText("Accomodation: ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel12)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(availableButton)
                                    .addComponent(remarkField, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(20, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(blockCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(roomNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(locationCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(occupantCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(departureDCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(arrivalDCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, 0)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(arrivalMCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(notAvailableButton)
                                        .addGap(11, 11, 11))
                                    .addComponent(departureMCombo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(arrivalYCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(departureYCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(accomodationCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accomodationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(0, 0, 0)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(blockCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(locationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(occupantCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roomNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(arrivalMCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arrivalDCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arrivalYCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(departureDCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(departureMCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(departureYCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(availableButton)
                    .addComponent(notAvailableButton))
                .addGap(2, 2, 2)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(remarkField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        modifyButton.setText("Modify");
        modifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modifyButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(cancelButton)
                .addComponent(modifyButton))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Course Details"));

        jLabel14.setText("Course Title:");

        jLabel15.setText("Department:");

        jLabel16.setText("Program Cost: ");

        costField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costFieldActionPerformed(evt);
            }
        });

        jLabel9.setText("Ref. No:");

        refField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(courseField)
                    .addComponent(costField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(departmentField, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                    .addComponent(refField)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(courseField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(departmentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(costField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(refField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
        // Primary use this method to set FIELDS CLEARED TO FALSE
        FIELDS_CLEARED = false;
    }//GEN-LAST:event_nameFieldActionPerformed

    private void blockComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockComboActionPerformed
        // TODO add your handling code here:
        chosenBlock = (SettingsVariable) blockCombo.getSelectedItem();
    }//GEN-LAST:event_blockComboActionPerformed

    private void locationComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationComboActionPerformed
        // TODO add your handling code here:
        chosenLocation = (SettingsVariable) locationCombo.getSelectedItem();
    }//GEN-LAST:event_locationComboActionPerformed

    private void occupantComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_occupantComboActionPerformed
        // TODO add your handling code here:
        chosenOccupant = (SettingsVariable) occupantCombo.getSelectedItem();
    }//GEN-LAST:event_occupantComboActionPerformed

    private void arrivalMComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arrivalMComboActionPerformed
        // TODO add your handling code here:
        chosenAMonth = arrivalMCombo.getSelectedIndex();
        chosenADayIndex = getDay(chosenAYear, chosenAMonth, chosenADayIndex);
        arrivalDCombo.setSelectedIndex(chosenADayIndex);

        FIELDS_CLEARED = false;
    }//GEN-LAST:event_arrivalMComboActionPerformed

    private void departureMComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departureMComboActionPerformed
        // TODO add your handling code here:
        chosenDMonth = departureMCombo.getSelectedIndex();
        chosenDDayIndex = getDay(chosenDYear, chosenDMonth, chosenDDayIndex);
        departureDCombo.setSelectedIndex(chosenDDayIndex);
    }//GEN-LAST:event_departureMComboActionPerformed

    private void accomodationComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accomodationComboActionPerformed
        // TODO add your handling code here:
        chosenAccomodation = (SettingsVariable) accomodationCombo.getSelectedItem();
        FIELDS_CLEARED = false;
    }//GEN-LAST:event_accomodationComboActionPerformed

    private void arrivalDComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arrivalDComboActionPerformed
        // TODO add your handling code here:
        chosenADayIndex = arrivalDCombo.getSelectedIndex();
        chosenADayIndex = getDay(chosenAYear, chosenAMonth, chosenADayIndex);
        arrivalDCombo.setSelectedIndex(chosenADayIndex);
    }//GEN-LAST:event_arrivalDComboActionPerformed

    private void arrivalYComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arrivalYComboActionPerformed
        // TODO add your handling code here:
        chosenAYear = Integer.parseInt((String)arrivalYCombo.getSelectedItem());
        chosenADayIndex = getDay(chosenAYear, chosenAMonth, chosenADayIndex);
        arrivalDCombo.setSelectedIndex(chosenADayIndex);
    }//GEN-LAST:event_arrivalYComboActionPerformed

    private void departureDComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departureDComboActionPerformed
        // TODO add your handling code here:
        chosenDDayIndex = departureDCombo.getSelectedIndex();
        chosenDDayIndex = getDay(chosenDYear, chosenDMonth, chosenDDayIndex);
        departureDCombo.setSelectedIndex(chosenDDayIndex);
    }//GEN-LAST:event_departureDComboActionPerformed

    private void availableButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_availableButtonItemStateChanged
        // TODO add your handling code here:
        status = STATUS.AVAILABLE;
        FIELDS_CLEARED = false;
    }//GEN-LAST:event_availableButtonItemStateChanged

    private void notAvailableButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_notAvailableButtonItemStateChanged
        // TODO add your handling code here:
        status = STATUS.NOT_AVAILABLE;
        FIELDS_CLEARED = false;
    }//GEN-LAST:event_notAvailableButtonItemStateChanged

    private void departureYComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departureYComboActionPerformed
        // TODO add your handling code here:
        chosenDYear = Integer.parseInt((String)departureYCombo.getSelectedItem());
        chosenDDayIndex = getDay(chosenDYear, chosenDMonth, chosenDDayIndex);
        departureDCombo.setSelectedIndex(chosenDDayIndex);
    }//GEN-LAST:event_departureYComboActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        if (!FIELDS_CLEARED)
            clearFields ();
        else
            asconApp.changeActionPage(ACTION_CONTROLLER.HOME_PAGE);

    }//GEN-LAST:event_cancelButtonActionPerformed

    private void modifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyButtonActionPerformed
        // TODO add your handling code here:
        processClientEdit ();
    }//GEN-LAST:event_modifyButtonActionPerformed

    private void costFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costFieldActionPerformed
        // TODO add your handling code here:
        processClientEdit ();
    }//GEN-LAST:event_costFieldActionPerformed

    private void refFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refFieldActionPerformed
        // TODO add your handling code here:
        processClientEdit ();
    }//GEN-LAST:event_refFieldActionPerformed

    // method to set the fields in the edit client page
    private void setClientAttributes ()
    {
        // uset the current Client to fill the fields
        nameField.setText(mClient.getClientStringAttribute(mSchema, 1));
        companyField.setText(mClient.getClientStringAttribute(mSchema, 2));
        addressField.setText(mClient.getClientStringAttribute(mSchema, 3));
        
        Calendar cal = Calendar.getInstance();
        cal.setTimeInMillis(mClient.getClientLongAttribute(9));
        arrivalDCombo.setSelectedIndex(cal.get(Calendar.DAY_OF_MONTH) - 1);
        arrivalMCombo.setSelectedIndex(cal.get(Calendar.MONTH));
        arrivalYCombo.setSelectedIndex(cal.get(Calendar.YEAR) - YEAR_START);
        
        cal.setTimeInMillis(mClient.getClientLongAttribute(10));
        departureDCombo.setSelectedIndex(cal.get(Calendar.DAY_OF_MONTH) - 1);
        departureMCombo.setSelectedIndex(cal.get(Calendar.MONTH));
        departureYCombo.setSelectedIndex(cal.get(Calendar.YEAR) - YEAR_START);
        
        if (mClient.getClientIntegerAttribute(11) == 1)
            availableButton.setSelected(true);
        else
            notAvailableButton.setSelected(true);
        
        remarkField.setText(mClient.getClientStringAttribute(mSchema, 12));
        courseField.setText(mClient.getClientStringAttribute(mSchema, 13));
        departmentField.setText(mClient.getClientStringAttribute(mSchema, 14));
        costField.setText(mClient.getClientStringAttribute(mSchema, 15));
        refField.setText(mClient.getClientStringAttribute(mSchema, Client.REFERENCE_NUMBER));
        
        roomNumberField.setText(mClient.getClientStringAttribute(mSchema, 7));
        accomodationCombo.setSelectedIndex(mClient.getClientIntegerAttribute(4) - 1);
        blockCombo.setSelectedIndex(mClient.getClientIntegerAttribute(5) - 1);
        locationCombo.setSelectedIndex(mClient.getClientIntegerAttribute(6) - 1);
        occupantCombo.setSelectedIndex(mClient.getClientIntegerAttribute(8) - 1);
        
        // make these values the default/chosen variables
        setDefaultValues();
    }
    // method to process the edited client
    public void processClientEdit ()
    {
        // obtain new inputs and set to database
        try {
            // obtain user's entry
            String name = nameField.getText();
            String company = companyField.getText();
            String address = addressField.getText();
            String room = roomNumberField.getText();
            String remark = remarkField.getText();
            String course = courseField.getText();
            String department = departmentField.getText();
            String costStr = costField.getText();
            String refNumber = refField.getText();
            
            Calendar arrival = Calendar.getInstance();
            arrival.set(chosenAYear, chosenAMonth, chosenADayIndex + 1);
            Calendar departure = Calendar.getInstance();
            departure.set(chosenDYear, chosenDMonth, chosenDDayIndex + 1);;
            
            if (name.equals("")) 
                throw new IllegalArgumentException ("Name of Client field cannot"
                        + " be empty");
            if (company.equals("")) 
                throw new IllegalArgumentException ("Name of Company field cannot "
                        + "be empty");
            if (address.equals("")) 
                throw new IllegalArgumentException ("Address Field cannot be empty");
            if (room.equals(""))
                throw new IllegalArgumentException ("Room Number field cannot be empty");
            if (course.equals("")) 
                throw new IllegalArgumentException ("Course Field cannot be empty");
            if (department.equals("")) 
                throw new IllegalArgumentException ("Department Field cannot be empty");
            if (costStr.equals(""))
                throw new IllegalArgumentException ("Cost Field cannot be empty");
            if (refNumber.equals(""))
                throw new IllegalArgumentException ("Reference Number Field cannot be empty");
            
            int roomNumber = Integer.parseInt(room);
            double cost = Double.parseDouble(costStr);
            
            // save to database
            mSchema.updateClient(
                mClient.getClientLongAttribute(0), name, company, address, 
                chosenAccomodation.getSettingsId(), chosenBlock.getSettingsId(), 
                chosenLocation.getSettingsId(), roomNumber, 
                chosenOccupant.getSettingsId(), arrival.getTimeInMillis(), 
                departure.getTimeInMillis(), status, remark, course, 
                department, cost, refNumber);

            // show success message if FLAG print is false
            SuccessMessageDialog.show(asconApp, "Client modified successfully");
            asconApp.changeActionPage(ACTION_CONTROLLER.CLIENT_PAGE);
        } catch (IllegalArgumentException e) {
            ErrorMessageDialog.show(asconApp, e.getClass().getSimpleName(),
                    e.getMessage ());
        } catch (java.sql.SQLException e) {
            ErrorMessageDialog.show(asconApp, "DATABASE ERROR",
                    "Error saving client details. This may be due to duplicate "
                            + "Ref. Number or other errors.");
        }
    }   // end processClientEdit

    /*
    ** This method clears the content of the Register panel for fresh entries
    ** Upon clearing, it updates the flag FIELDS_CLEARED
    */
    private void clearFields ()
    {
        // clear the fields
        nameField.setText("");
        companyField.setText("");
        addressField.setText("");
        roomNumberField.setText("");
        remarkField.setText("");
        courseField.setText("");
        costField.setText("");
        refField.setText("");
        departmentField.setText("");
        accomodationCombo.setSelectedIndex(0);
        blockCombo.setSelectedIndex(0);
        locationCombo.setSelectedIndex(0);
        occupantCombo.setSelectedIndex(0);
        arrivalDCombo.setSelectedIndex(0);
        arrivalMCombo.setSelectedIndex(0);
        arrivalYCombo.setSelectedIndex(0);
        departureDCombo.setSelectedIndex(0);
        departureMCombo.setSelectedIndex(0);
        departureYCombo.setSelectedIndex(0);
        notAvailableButton.setSelected(true);
        
        // set the instance variables to default
        setDefaultValues ();
        
        // toggle clearFields
        FIELDS_CLEARED = true;
    }
    
    /*
    ** Method to returnt the ComboBoxes to their default values
    */
    private void setDefaultValues ()
    {
        chosenAccomodation = (SettingsVariable) accomodationCombo
                .getSelectedItem();
        chosenLocation = (SettingsVariable) locationCombo.getSelectedItem();
        chosenBlock = (SettingsVariable) blockCombo.getSelectedItem();
        chosenOccupant = (SettingsVariable) occupantCombo.getSelectedItem();
        
        // set the default chosen date items
        chosenADayIndex = arrivalDCombo.getSelectedIndex();
        chosenAMonth = arrivalMCombo.getSelectedIndex();
        chosenAYear = Integer.parseInt((String)arrivalYCombo.getSelectedItem());
        chosenDDayIndex = departureDCombo.getSelectedIndex();
        chosenDMonth = departureMCombo.getSelectedIndex();
        chosenDYear = Integer.parseInt((String)departureYCombo.getSelectedItem());
        
    }
    
    // method to set an appropriate month day
    private int getDay (int year, int month, int day) {
        switch (month) {
            case 1: // FEBRUARY
                if (day > 27) {
                    if (year % 4 == 0)
                        return 28;
                    else
                        return 27;
                } else
                    return day;
            case 3: // APRIL
            case 5: // JUNE
            case 8: // SEPTEMBER
            case 10: // NOVEMBER
                if (day > 29)
                    return 29;
                else
                    return day;
            default:
                return day;
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox accomodationCombo;
    private javax.swing.JTextField addressField;
    private javax.swing.JComboBox arrivalDCombo;
    private javax.swing.JComboBox arrivalMCombo;
    private javax.swing.JComboBox arrivalYCombo;
    private javax.swing.JRadioButton availableButton;
    private javax.swing.JComboBox blockCombo;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField companyField;
    private javax.swing.JTextField costField;
    private javax.swing.JTextField courseField;
    private javax.swing.JTextField departmentField;
    private javax.swing.JComboBox departureDCombo;
    private javax.swing.JComboBox departureMCombo;
    private javax.swing.JComboBox departureYCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JComboBox locationCombo;
    private javax.swing.JButton modifyButton;
    private javax.swing.JTextField nameField;
    private javax.swing.JRadioButton notAvailableButton;
    private javax.swing.JComboBox occupantCombo;
    private javax.swing.JTextField refField;
    private javax.swing.JTextField remarkField;
    private javax.swing.JTextField roomNumberField;
    private javax.swing.ButtonGroup statusGroup;
    // End of variables declaration//GEN-END:variables
}
